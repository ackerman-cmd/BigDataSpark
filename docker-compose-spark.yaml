services:
  spark-master:
    build:
      context: .
      dockerfile: Dockerfile-spark
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - '7077:7077'
      - '8080:8080'
    volumes:
      - ./target/BigDataSparkProject-0.0.1-SNAPSHOT.jar:/opt/bitnami/spark/jars/BigDataSparkProject-0.0.1-SNAPSHOT.jar
      - ./target/libs:/opt/bitnami/spark/libs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - shared

  spark-worker:
    build:
      context: .
      dockerfile: Dockerfile-spark
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    volumes:
      - ./target/BigDataSparkProject-0.0.1-SNAPSHOT.jar:/opt/bitnami/spark/jars/BigDataSparkProject-0.0.1-SNAPSHOT.jar
      - ./target/libs:/opt/bitnami/spark/libs
    depends_on:
      spark-master:
        condition: service_healthy
    networks:
      - shared

  spark-submit:
    build:
      context: .
      dockerfile: Dockerfile-spark-submit
    container_name: spark-submit
    volumes:
      - ./target/BigDataSparkProject-0.0.1-SNAPSHOT.jar:/opt/bitnami/spark/jars/BigDataSparkProject-0.0.1-SNAPSHOT.jar
      - ./target/libs:/opt/bitnami/spark/libs
    depends_on:
      spark-master:
        condition: service_healthy
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      cassandra:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      valkey:
        condition: service_healthy
    tty: true
    stdin_open: true
    networks:
      - shared